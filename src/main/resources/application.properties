# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# DB Source URL 설정- Data의 각각 길이를 해결하기 위해서는 이 코드를 사용해야 해결됨
# 다른 코드 사용하면 Data truncation: Data too long for column 'content' at row 1 에러 발생
spring.datasource.url=jdbc:mysql://localhost:3306/News?sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false

# DB 사용자 이름 설정
# 예시) spring.datasource.username=root
spring.datasource.username=root

# DB 사용자이름에 대한 암호 설정
# 예시) spring.datasource.password=root
spring.datasource.password=han@1782

# true 설정 시, JPA 쿼리문 확인 가능
spring.jpa.show-sql=true

# DDL(create, alter, drop) 정의 시, DB의 고유 기능을 사용할 수 있음.
spring.jpa.hibernate.ddl-auto=create

# JPA의 구현체인 Hibernate가 동작하면서, 발생한 SQL의 가독성을 높여줌.
spring.jpa.properties.hibernate.format_sql=true

